{
    "openapi": "3.0.0",
    "info": {
        "title": "Petshop App",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "/buckApp/public/api/v1"
        }
    ],
    "paths": {
        "/api": {},
        "/admin/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "User login",
                "description": "Endpoint to authenticate a user.",
                "operationId": "c5a8b2dbaa76d28c359e2dd20c4f599b",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@buckhill.co.uk"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/admin/logout": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Log a user out",
                "operationId": "logoutAdminUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/admin/create": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new user",
                "description": "Create a new user",
                "operationId": "createAdminUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/admin/user-listing": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List users",
                "description": "Retrieve a non admin list of users",
                "operationId": "listAdminUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/user-edit/{uuid}": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update a User",
                "description": "Update a user identified by UUID",
                "operationId": "updateAdminUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/user-delete/{uuid}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a user",
                "description": "Deletes a users identified by uuid",
                "operationId": "destroyAdminUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "user deleted successfully"
                    },
                    "404": {
                        "description": "user not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/brand/create": {
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "description": "Create a new brand",
                "operationId": "createBrand",
                "requestBody": {
                    "description": "Brand data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "List brands",
                "description": "Retrieve a list of brands",
                "operationId": "listBrands",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/brand/{uuid}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Retrieve a brand",
                "description": "Retrieve a brand identified by UUID",
                "operationId": "getBrand",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the brand to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand retrieved successfully"
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update a brand",
                "description": "Update a brand identified by UUID",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the brand to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Brand data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a brand",
                "description": "Deletes a brand identified by UUID",
                "operationId": "destroyBrand",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the brand to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Brand deleted successfully"
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/category/create": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category",
                "operationId": "createcategory",
                "requestBody": {
                    "description": "category data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "category created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List categories ",
                "description": "Retrieve a list of categories",
                "operationId": "listcategories ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/category/{uuid}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve a category",
                "description": "Retrieve a category identified by ID",
                "operationId": "getcategory",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the category to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category retrieved successfully"
                    },
                    "404": {
                        "description": "category not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update a category identified by UUID",
                "operationId": "updatecategory",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the category to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "category data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "category updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "category not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category identified by uuid",
                "operationId": "destroycategory",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Uuid of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "category deleted successfully"
                    },
                    "404": {
                        "description": "category not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order-status/create": {
            "post": {
                "tags": [
                    "Order Statuses"
                ],
                "summary": "Create a new order status",
                "description": "Create a new order status",
                "operationId": "createOrderStatus",
                "requestBody": {
                    "description": "Order status data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order status created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order-statuses": {
            "get": {
                "tags": [
                    "Order Statuses"
                ],
                "summary": "List order statuses",
                "description": "Retrieve a list of order statuses",
                "operationId": "listOrderStatuses",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/order-status/{uuid}": {
            "get": {
                "tags": [
                    "Order Statuses"
                ],
                "summary": "Retrieve an order status",
                "description": "Retrieve an order status identified by UUID",
                "operationId": "getOrderStatus",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the order status to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status retrieved successfully"
                    },
                    "404": {
                        "description": "Order status not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Order Statuses"
                ],
                "summary": "Update an order status",
                "description": "Update an order status identified by UUID",
                "operationId": "updateOrderStatus",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the order status to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Order status data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Order status not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order Statuses"
                ],
                "summary": "Delete an order status",
                "description": "Deletes an order status identified by UUID",
                "operationId": "destroyOrderStatus",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the order status to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order status deleted successfully"
                    },
                    "404": {
                        "description": "Order status not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/create": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment",
                "description": "Create a new payment",
                "operationId": "createPayment",
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "List payments",
                "description": "Retrieve a list of payments",
                "operationId": "listPayments",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/payment/{uuid}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Retrieve a payment",
                "description": "Retrieve a payment identified by UUID",
                "operationId": "retrievePayment",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the payment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment retrieved successfully"
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update a payment",
                "description": "Update a payment identified by UUID",
                "operationId": "updatePayment",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the payment to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a payment",
                "description": "Deletes a payment identified by UUID",
                "operationId": "deletePayment",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the payment to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Payment deleted successfully"
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/product/create": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product",
                "operationId": "createproduct",
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List products",
                "description": "Retrieve a list of products",
                "operationId": "listproducts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/product/{uuid}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a product",
                "description": "Retrieve a product identified by UUID",
                "operationId": "getproduct",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Update a product identified by UUID",
                "operationId": "updateproduct",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Deletes a product identified by UUID",
                "operationId": "destroyproduct",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "description": "Endpoint to authenticate a user.",
                "operationId": "994f48569c4a1bb2132a214f59b24daf",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@buckhill.co.uk"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Log a user out",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description": "Create a new user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Retrieve a user",
                "description": "Retrieve a user identified by ID",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Deletes a users identified by ID",
                "operationId": "destroyUser",
                "responses": {
                    "204": {
                        "description": "user deleted successfully"
                    },
                    "404": {
                        "description": "user not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/edit": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a User",
                "description": "Update a user identified by ID",
                "operationId": "updateUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "description": "Brand model",
                "required": [
                    "title",
                    "slug"
                ],
                "properties": {
                    "title": {
                        "description": "Brand title",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Brand slug",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "required": [
                    "title",
                    "slug"
                ],
                "properties": {
                    "title": {
                        "description": "Category title",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Category slug",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderStatus": {
                "title": "OrderStatus",
                "description": "OrderStatus model",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "Order status title",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "title": "Payment",
                "description": "Payment model",
                "required": [
                    "type",
                    "details"
                ],
                "properties": {
                    "type": {
                        "description": "Payment type",
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "cash_on_delivery",
                            "bank_transfer"
                        ]
                    },
                    "details": {
                        "description": "Payment details (empty object)",
                        "properties": {},
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "required": [
                    "category_uuid",
                    "title",
                    "price",
                    "metadata",
                    "image",
                    "description"
                ],
                "properties": {
                    "category_uuid": {
                        "description": "UUID of the category",
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "description": "Product title",
                        "type": "string"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Product metadata",
                        "properties": {
                            "brand": {
                                "description": "UUID from petshop.brands",
                                "type": "string",
                                "format": "uuid"
                            },
                            "image": {
                                "description": "UUID from petshop.files",
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User resource",
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "avatar",
                    "address",
                    "phone_number",
                    "password_confirmation"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "********"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "********"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+123456789"
                    },
                    "is_marketing": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}